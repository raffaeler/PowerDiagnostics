<Window x:Class="DiagnosticWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DiagnosticWPF"
        mc:Ignorable="d" Icon="Diagnose_16x.ico"
        Title="Diagnostic Demo by @raffaeler" Loaded="Window_Loaded"
        Width="1200" Height="600">
    <Window.Resources>
        <Style x:Key="clearButtonStyle" TargetType="Button">
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="15,5,0,5" />
            <Setter Property="FontSize" Value="22" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="ToolTip" Value="Clear the filter" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style x:Key="triggerHeader" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,5,10,5" />
            <Setter Property="MinWidth" Value="60" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style x:Key="triggerHeaderButton" TargetType="Button">
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="0,5,10,5" />
            <Setter Property="MinWidth" Value="60" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="ToolTip" Value="Clear" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
        </Style>
        <Style x:Key="toolButtonStyle" TargetType="Button" >
            <Setter Property="Margin" Value="0,5,10,5" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="Width" Value="48" />
            <Setter Property="Height" Value="48" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
        </Style>

        <Style x:Key="smallButtonStyle" TargetType="Button" >
            <!--<Setter Property="Margin" Value="0,5,10,5" />-->
            <Setter Property="Padding" Value="1" />
            <Setter Property="Width" Value="26" />
            <Setter Property="Height" Value="26" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
        </Style>

        <Style x:Key="triggerValue" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,5,10,5" />
            <Setter Property="MinWidth" Value="60" />
            <Setter Property="MaxWidth" Value="600" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="Bold" />

        </Style>

        <Style x:Key="GridRowStyle" TargetType="DataGridRow">
            <EventSetter Event="MouseDoubleClick" Handler="GridDoubleClick" />
        </Style>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!--<TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource triggerHeader}" Text="CPU"/>-->
                <Button Grid.Row="0" Grid.Column="0" Style="{StaticResource triggerHeaderButton}"
                        Content="CPU" Click="ClearHeader" Tag="{Binding ElementName=trCpu}"/>
                <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource triggerValue}" x:Name="trCpu" />

                <!--<TextBlock Grid.Row="0" Grid.Column="2" Style="{StaticResource triggerHeader}" Text="Last GC Alloc" />-->
                <Button Grid.Row="0" Grid.Column="2" Style="{StaticResource triggerHeaderButton}"
                        Content="Last GC Alloc" Click="ClearHeader" Tag="{Binding ElementName=trGcAlloc}"/>
                <TextBlock Grid.Row="1" Grid.Column="2" Style="{StaticResource triggerValue}" x:Name="trGcAlloc" />

                <!--<TextBlock Grid.Row="0" Grid.Column="4" Style="{StaticResource triggerHeader}" Text="Working-set" />-->
                <Button Grid.Row="0" Grid.Column="4" Style="{StaticResource triggerHeaderButton}"
                        Content="Working-set" Click="ClearHeader" Tag="{Binding ElementName=trWorkingSet}"/>
                <TextBlock Grid.Row="1" Grid.Column="4" Style="{StaticResource triggerValue}" x:Name="trWorkingSet" />

                <!--<TextBlock Grid.Row="0" Grid.Column="6" Style="{StaticResource triggerHeader}" Text="Http Req/s" />-->
                <Button Grid.Row="0" Grid.Column="6" Style="{StaticResource triggerHeaderButton}"
                        Content="Http Req/s" Click="ClearHeader" Tag="{Binding ElementName=trHttpReq}"/>
                <TextBlock Grid.Row="1" Grid.Column="6" Style="{StaticResource triggerValue}" x:Name="trHttpReq" />

                <!--<TextBlock Grid.Row="0" Grid.Column="8" Style="{StaticResource triggerHeader}" Text="Custom Header" />-->
                <Button Grid.Row="0" Grid.Column="8" Style="{StaticResource triggerHeaderButton}"
                        Content="Custom Header" Click="ClearHeader" Tag="{Binding ElementName=trCustomHeader}"/>
                <TextBlock Grid.Row="1" Grid.Column="8" Style="{StaticResource triggerValue}" x:Name="trCustomHeader" />

                <!--<StackPanel Grid.Row="0" Grid.Column="10" Orientation="Horizontal">
                    <TextBlock Style="{StaticResource triggerHeader}" Text="Last first-chance exception"  />
                    <Button Content="{StaticResource delete}" Style="{StaticResource smallButtonStyle}"
                            Click="ClearLastException" ToolTip="Clear the last exception"/>
                </StackPanel>-->
                <Button Grid.Row="0" Grid.Column="10" Style="{StaticResource triggerHeaderButton}"
                        Content="Last first-chance exception" Click="ClearHeader" Tag="{Binding ElementName=trException}"/>
                <TextBlock Grid.Row="1" Grid.Column="10" Style="{StaticResource triggerValue}" x:Name="trException" />
            </Grid>
        </StackPanel>

        <StackPanel Grid.Row="1" Orientation="Horizontal">
            <Button Content="{StaticResource fileOpen}" Style="{StaticResource toolButtonStyle}"
                    Click="OpenDump" ToolTip="Open a dump file"/>
            <Button Content="{StaticResource monitor}" Style="{StaticResource toolButtonStyle}"
                    Click="MonitorProcess" ToolTip="Monitor a process"/>
            <Button Content="{StaticResource snapshot}" Style="{StaticResource toolButtonStyle}"
                    Click="Snapshot" ToolTip="Snapshot the process"/>
            <Button Content="{StaticResource close}" Style="{StaticResource toolButtonStyle}"
                    Click="Close" ToolTip="Close the current session"/>

            <Grid>
                <ComboBox x:Name="ComboQueries" Margin="15,5" MinWidth="350" FontSize="22"
                      Text="Pick a query"
                      VerticalContentAlignment="Center"
                      SelectionChanged="ComboQueries_SelectionChanged">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock x:Name="ComboCue" Margin="20,11" FontSize="22" Text="Pick a query ..."
                           IsHitTestVisible="false" Foreground="Gray" />
            </Grid>

            <!--<TextBlock Text="Filter: " Margin="15,5,0,5" FontSize="22" VerticalAlignment="Center" />-->
            <Button Style="{StaticResource clearButtonStyle}"
                    Content="Filter: " Click="ClearFilter" Tag="{Binding ElementName=FilterTextBlock}"/>

            <TextBox x:Name="FilterTextBlock" KeyUp="FilterChanged" Margin="5,5" MinWidth="150"
                     FontSize="22" VerticalContentAlignment="Center" />

        </StackPanel>

        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="5" />
                <RowDefinition x:Name="detailsRow" Height="0"/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition x:Name="detailsColumn" />
                </Grid.ColumnDefinitions>

                <DataGrid x:Name="Master" AutoGenerateColumns="False"
                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False"
                      SelectionChanged="Master_SelectionChanged" ItemContainerStyle="{StaticResource GridRowStyle}"/>

                <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />

                <DataGrid Grid.Column="2" x:Name="Details" AutoGenerateColumns="False"
                CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False"
                ItemContainerStyle="{StaticResource GridRowStyle}"
                          SelectionChanged="Details_SelectionChanged"/>
            </Grid>
            <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" />
            <ScrollViewer Grid.Row="2">
                <TextBlock x:Name="textDetails" FontSize="16" IsEnabled="False"/>
            </ScrollViewer>
        </Grid>

        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="5,10,0,0">
            <TextBlock x:Name="status" FontSize="16" Foreground="Gray" />
        </StackPanel>
    </Grid>
</Window>
